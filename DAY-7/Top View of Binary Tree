/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int> ans;
        if (root == nullptr){
            return ans;
        }
        
        queue<pair<Node*, int>> q;
        map<int, int> mpp;
        q.push({root, 0});
        
        while (!q.empty()){
            auto it = q.front();
            q.pop();
            
            Node* temp = it.first;
            int line = it.second;
            if (mpp.find(line) == mpp.end()){
                mpp[line] = temp->data;
            }
            
            if (temp->left != nullptr){
                q.push({temp->left, line-1});
            }
            
            if (temp->right != nullptr){
                q.push({temp->right, line+1});
            }
        }
        
        for (auto i : mpp){
            ans.push_back(i.second);
        }
        
        return ans;
    }

};
